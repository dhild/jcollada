/*
 * Copyright (c) 2014 D. Ryan Hild <d.ryan.hild@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

allprojects {
    group = 'net.dryanhild.jcollada'
    version = '1.3-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    apply plugin: 'idea'
    apply plugin: 'project-report'
    apply plugin: 'build-dashboard'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    apply plugin: 'findbugs'
    apply plugin: 'pmd'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    configurations {
        provided
        provided.extendsFrom(compile)
    }

    idea {
        module {
            scopes.PROVIDED.plus += [ configurations.provided ]
        }
    }

    sourceSets {
        main {
            compileClasspath += configurations.provided
            runtimeClasspath += configurations.provided
        }
        test {
            compileClasspath += configurations.provided
            runtimeClasspath += configurations.provided
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint"
    }
    
    pmd {
        ignoreFailures = true
        targetJdk = 1.7
        ruleSetFiles = files("$rootDir/config/pmd/custom.xml")
    }

    tasks.withType(Test) {
        useTestNG() {
            suiteXmlBuilder().suite(name: 'jcollada', parallel: 'tests') {
                test(name: 'all-tests') {
                    packages {
                        'package'(name: 'net.dryanhild.collada.*')
                    }
                }
            }
        }
        options {
            listeners << 'org.uncommons.reportng.HTMLReporter'
            listeners << 'org.testng.reporters.XMLReporter'
        }
        ext.useDefaultListeners = true
        ext.workingDirectory = 'build/'
    }

    dependencies {
        compile "com.google.guava:guava:${googleGuavaVersion}"
        compile "org.slf4j:slf4j-api:${slf4jVersion}"
        compile 'javax.validation:validation-api:1.1.0.Final'

        provided 'ch.qos.logback:logback-classic:1.1.3'

        testCompile "org.testng:testng:${testngVersion}"
        testCompile "org.uncommons:reportng:$reportngVersion"
        testCompile "org.assertj:assertj-core:${assertjVersion}"
        testCompile "org.mockito:mockito-all:${mockitoVersion}"
        // known issue with TestNG and ReportNG: explicitly add Guice
        testCompile "com.google.inject:guice:3.0"
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    tasks.withType(PublishToMavenRepository) {
        dependsOn ':jcollada-test:test'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
        repositories {
            maven {
                if (version.endsWith("-SNAPSHOT")) {
                    url "http://dev.dryanhild.net/nexus/content/repositories/snapshots/"
                } else {
                    url "http://dev.dryanhild.net/nexus/content/repositories/releases/"
                }
                credentials {
                    username "$mavenUser"
                    password "$mavenPassword"
                }
            }
        }
    }
}
